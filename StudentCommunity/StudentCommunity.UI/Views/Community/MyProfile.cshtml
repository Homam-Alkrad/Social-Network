@namespace StudentCommunity.UI.Models.AccountModel
@model UserViewModel
@using StudentCommunity.UI.Data;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ApplicationUser> userManegar;
@{
	ViewData["Title"] = "User Profile";
	Layout = "_CustomView";
	var user = await userManegar.GetUserAsync(User);
}

<!DOCTYPE html>
<html lang="en">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="description" content="" />
	<meta name="keywords" content="" />
	<link rel="icon" href="images/fav.png" type="image/png" sizes="16x16">
	<style>
		.activePage {
			background-color: lightsteelblue;
			border-left: solid blue;
			padding-left: 2px;
		}
	</style>
</head>
<body>

	<section>
		<div class="feature-photo">
			<figure><img src="~/custom/images/resources/timeline-1.jpg" alt=""></figure>
			<div class="add-btn">
				<span>@Model.university.universityName</span>
			</div>
			<div class="container-fluid">
				<div class="row merged">
					<div class="col-lg-2 col-sm-3">
						<div class="user-avatar">
							<figure>

								<img src="@Model.ProfileImg" alt="">
								<form class="edit-phto" asp-action="editphoto" asp-controller="Account" enctype="multipart/form-data" id="editPhotoForm">
									<div class="d-flex flex-row">
										<i class="fa fa-camera-retro"></i>
										<label class="fileContainer p-0" style="font-size:9px;">
											Edit Display Photo
											<input type="file" asp-for="ImgFile" id="imgFileInput" />
										</label>
									</div>
								</form>
							</figure>
						</div>
					</div>
					<div class="col-lg-10 col-sm-9">
						<div class="timeline-info">

							<ul>
								<li class="admin-name">
									<h5>@Model.FullName</h5>
									<span>@Model.major.Name</span>
								</li>
								<li>
									<a class="" asp-action="Index" asp-controller="Friend">Friends</a>
									<a class="" asp-action="Index" asp-controller="Groups">Groups</a>
									<a class="active" asp-action="MyProfile" asp-controller="Community" title="" data-ripple="">about</a>
								</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>

	<section>
		<div class="gap gray-bg py-2">
			<div class="container-fluid">
				<div class="row">
					<div class="col-lg-12">
						<div class="row" id="page-contents">
							<div class="col-lg-3">
								<aside class="sidebar static" style="width: 100%;">
									<div class="widget px-2">
										<h4 class="widget-title">Shortcuts</h4>
										<ul class="naves" style="padding:10px 5px;">
											<li class="width:100%">
												<i class="ti-mouse-alt"></i>
												<a asp-action="MyProfile" asp-controller="Community" title="">My Profile</a>
											</li>
											<li>
												<i class="ti-home"></i>
												<a asp-action="Index" asp-controller="Community">Students Community</a>
											</li>
											<li>
												<i class="fa fa-university" aria-hidden="true"></i>
												<a asp-action="UserUniversity" asp-controller="Community">@Model.university.universityName</a>
											</li>
											<li>
												<i class="fa fa-graduation-cap m-0" aria-hidden="true"></i>
												<a asp-action="MajorCommunity" asp-controller="Community">@Model.major.Name</a>
											</li>
											<li>
												<i class="fa fa-trophy" aria-hidden="true"></i>
												<a asp-action="Index" asp-controller="Competition">Competitions Community</a>
											</li>
											<li>
												<i class="fa fa-briefcase" aria-hidden="true"></i>
												<a asp-action="Index" asp-controller="Library" title=""> Student Library </a>
											</li>
											<li>
												<i class="ti-comments-smiley"></i>
												<a asp-action="Chat" asp-controller="ChatSystem" title="">Chat System</a>
											</li>
											<li>
												<i class="ti-clipboard"></i>
												<a asp-action="News" asp-controller="Community" title="">News feed</a>
											</li>
											<li>
												<i class="fa fa-users" aria-hidden="true"></i>
												<a asp-action="Index" asp-controller="Groups" title="">My Groups</a>
											</li>
											<li>
												<i class="ti-user"></i>
												<a asp-action="Index" asp-controller="Friend" title="">friends</a>
											</li>
											<li>
												<i class="fa fa-lightbulb-o" aria-hidden="true"></i>
												<a asp-action="CreateAdvertising" asp-controller="Advertisement" title="">Advertise with Us</a>
											</li>
											<li>
												<i class="fa fa-wpforms" aria-hidden="true"></i>
												<a asp-action="Create" asp-controller="Assessment" title="">Community Assessment.</a>
											</li>
											@if (user != null && User.IsInRole("Admin"))
											{
												<li>
													<i class="fa fa-low-vision" aria-hidden="true"></i>
													<a asp-action="RoleList" asp-controller="Account">Community Roles</a>
												</li>
											}
											<li>
												<i class="ti-power-off"></i>
												<a asp-action="Logout" asp-controller="Account" title="">Logout</a>
											</li>
										</ul>
									</div>
									<div class="widget stick-widget px-2 pb-5">
										<h4 class="widget-title">Your groups</h4>
										<ul id="people-list">
											@await Component.InvokeAsync("Group")
										</ul>
									</div>
								</aside>
							</div>
							<div class="col-lg-6">
								<div class="inbox-lists">
									<div class="loadMore">

								<div class="post-alert editAlert" style="display:none;">
									<span>Your Edit May be Offencive</span>
									<span class="close-btn" onclick="this.parentElement.style.display='none';">&times;</span>
								</div>
										<!-------------------------------------------->
										@await Component.InvokeAsync("MyPost",Model.UserId)
										<!-------------------------------------------->
									</div>
								</div>
							</div>
							<div class="col-lg-3">
								<aside class="sidebar static" style="width:100%;">
									<div class="widget friend-list stick-widget">
										<h4 class="widget-title">Friends</h4>
										<div id="searchDir"></div>
										<ul id="people-list" class="friendz-list">
											@await Component.InvokeAsync("FriendPage",Model.UserId)
										</ul>
										<div class="chat-box">
											<div class="chat-head">
												<span class="status f-online"></span>
												<h6>Bucky Barnes</h6>
												<div class="more">
													<span><i class="ti-more-alt"></i></span>
													<span class="close-mesage"><i class="ti-close"></i></span>
												</div>
											</div>
											<div class="chat-list">
												<ul>
													<li class="me">
														<div class="chat-thumb"><img src="images/resources/chatlist1.jpg" alt=""></div>
														<div class="notification-event">
															<span class="chat-message-item">
																Hi James! Please remember to buy the food for tomorrow! I’m gonna be handling the gifts and Jake’s gonna get the drinks
															</span>
															<span class="notification-date"><time datetime="2004-07-24T18:18" class="entry-date updated">Yesterday at 8:10pm</time></span>
														</div>
													</li>
													<li class="you">
														<div class="chat-thumb"><img src="images/resources/chatlist2.jpg" alt=""></div>
														<div class="notification-event">
															<span class="chat-message-item">
																Hi James! Please remember to buy the food for tomorrow! I’m gonna be handling the gifts and Jake’s gonna get the drinks
															</span>
															<span class="notification-date"><time datetime="2004-07-24T18:18" class="entry-date updated">Yesterday at 8:10pm</time></span>
														</div>
													</li>
													<li class="me">
														<div class="chat-thumb"><img src="~/custom/images/resources/chatlist1.jpg" alt=""></div>
														<div class="notification-event">
															<span class="chat-message-item">
																Hi James! Please remember to buy the food for tomorrow! I’m gonna be handling the gifts and Jake’s gonna get the drinks
															</span>
															<span class="notification-date"><time datetime="2004-07-24T18:18" class="entry-date updated">Yesterday at 8:10pm</time></span>
														</div>
													</li>
												</ul>
												<form class="text-box">
													<textarea placeholder="Post enter to post..."></textarea>
													<div class="add-smiles">
														<span title="add icon" class="em em-expressionless"></span>
													</div>
													<div class="smiles-bunch">
														<i class="em em---1"></i>
														<i class="em em-smiley"></i>
														<i class="em em-anguished"></i>
														<i class="em em-laughing"></i>
														<i class="em em-angry"></i>
														<i class="em em-astonished"></i>
														<i class="em em-blush"></i>
														<i class="em em-disappointed"></i>
														<i class="em em-worried"></i>
														<i class="em em-kissing_heart"></i>
														<i class="em em-rage"></i>
														<i class="em em-stuck_out_tongue"></i>
													</div>
													<button type="submit"></button>
												</form>
											</div>
										</div>
									</div>
								</aside>
							</div>
						</div>
					</div><!-- centerl meta -->
				</div>
			</div>
		</div>
	</section>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const fileInput = document.getElementById('imgFileInput');
			fileInput.addEventListener('change', function () {
				const form = document.getElementById('editPhotoForm');
				form.submit();
			});
		});
		function deletePost(postId) {
			if (confirm("Are you sure you want to delete this post?")) {
				$.ajax({
					type: "POST",
					url: "/Post/Delete",
					data: { PostId: postId },
					success: function () {
						// Remove the deleted post from the page
						$("#post-" + postId).remove();
						// Refresh the page after a successful delete
						location.reload();
					},
					error: function () {
						// Handle errors if necessary
					}
				});
			}
		}
		function toggleEditSection(postId) {
			$(`.edit-section`).each(function () {
				const sectionId = $(this).attr('id');
				const isVisible = $(this).is(':visible');

				if (sectionId.includes(postId)) {
					$(this).toggle(!isVisible);
				} else {
					$(this).hide();
				}
			});
		}

		function editPost(postId) {
			const editInput = $(`#edit-input-${postId}`);
			const postText = editInput.val();
			const data = {
				Content: postText,
				PostId: postId,
			};

			$.ajax({
				type: "POST",
				url: "/Post/EditPost",
				data: JSON.stringify(data),
				contentType: "application/json",
				success: function (response) {
					if (response.success) {
						toggleEditSection(postId);
					} else {
						$('.editAlert').show();  // Corrected line to display the alert
					}
				},
				error: function (error) {
					console.error("Error in AJAX request");
				}
			});
		}
		function closeAlert(alertId) {
			$('#' + alertId).hide();
		}
	</script>
</body>
</html>